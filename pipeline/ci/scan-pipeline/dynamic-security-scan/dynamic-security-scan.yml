default:
  image: quay.io/bastiaanvanderbijl/docker:26.1.3

falco-scan:
  stage: scan-pipeline:dynamic-security-scan
  needs: [verify-image]
  services:
    - name: quay.io/bastiaanvanderbijl/docker:26.1.3-dind
      alias: docker-dind-falco
  variables:
    DOCKER_HOST: tcp://docker-dind-falco:2375/
  before_script:
    - while ! docker info; do sleep 1; done 
  script:
    # Print the current directory
    - echo "Current directory is $(pwd)"
    
    # Pull the Falco image
    - |
      if ! docker pull quay.io/bastiaanvanderbijl/falco:0.38.0; then
        echo "Failed to pull Falco image." >&2
        exit 1
      fi
    
    # Ensure the report directory exists
    - |
      if ! mkdir -p reports; then
        echo "Failed to create reports directory." >&2
        exit 1
      fi

    # Run Falco container with the custom rules and required volume mounts
    - |
      if [ -f $(pwd)/ci/scan-pipeline/dynamic-security-scan/config/falco_rules.yaml ] && [ -f $(pwd)/ci/scan-pipeline/dynamic-security-scan/config/falco.yaml ]; then
        docker run --rm -d --name falco --privileged \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $(pwd)/ci/scan-pipeline/dynamic-security-scan/config/falco_rules.yaml:/etc/falco/falco_rules.yaml:ro \
          -v $(pwd)/ci/scan-pipeline/dynamic-security-scan/config/falco.yaml:/etc/falco/falco.yaml:rw \
          -v $(pwd)/ci/scan-pipeline/dynamic-security-scan/reports:/var/log \
          -v /proc:/host/proc:ro \
          -v /boot:/host/boot:ro \
          -v /lib/modules:/host/lib/modules:ro \
          -v /usr:/host/usr:ro \
          -v /dev:/host/dev \
          quay.io/bastiaanvanderbijl/falco:0.38.0
      else
        echo "Falco configuration or rules file not found." >&2
        exit 1
      fi

    # Wait to ensure Falco has time to start
    - sleep 30

    # Run the specified test image to trigger events
    - |
      CONTAINER_ID=$(docker run --rm -d --name test-container $IMAGE_NAME:$IMAGE_TAG)
      if [ -z "$CONTAINER_ID" ]; then
        echo "Failed to start test-container." >&2
        exit 1
      fi
      echo $CONTAINER_ID > reports/container_id.txt

    # Debugging: Check the status of the Falco container
    - |
      if ! docker ps -a; then
        echo "Failed to list containers." >&2
        exit 1
      fi
    
    # Wait to allow Falco to detect events
    - sleep 60  

    # Debugging: Check the logs of the Falco container before saving
    - |
      if ! docker logs falco; then
        echo "Falco container not found or has exited." >&2
        exit 1
      fi
    
    # Retrieve Falco logs and save them as an artifact
    - |
      if ! cp $(pwd)/ci/scan-pipeline/dynamic-security-scan/reports/falco-report.json reports/falco-report.json; then
        echo "Failed to save Falco logs." >&2
        exit 1
      fi
  artifacts:
    paths:
      - reports/
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_TAG == "scan-pipeline"'