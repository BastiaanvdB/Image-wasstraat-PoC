default:
  image: quay.io/bastiaanvanderbijl/docker:26.1.3

sign-image:
  stage: sign-pipeline:sign-image
  needs:
    - push-image
  services:
    - name: quay.io/bastiaanvanderbijl/docker:26.1.3-dind
      command: ["--insecure-registry=172.20.0.2:5000"]
      alias: docker-dind-sign-image
  variables:
    DOCKER_HOST: tcp://docker-dind-sign-image:2375/
    COSIGN_TLOG_UPLOAD: "y"
  script:
    # Install necessary tools
    - apk add --no-cache curl jq unzip

    # Download Vault CLI
    - if ! curl -o vault.zip https://releases.hashicorp.com/vault/1.16.3/vault_1.16.3_linux_amd64.zip; then echo "Failed to download Vault CLI. See the job log for details." >&2; exit 1; fi
    - if [ ! -f vault.zip ]; then echo "Vault CLI zip file not found after download." >&2; exit 1; fi
    - if ! unzip vault.zip; then echo "Failed to unzip Vault CLI. See the job log for details." >&2; exit 1; fi
    - mv vault /usr/local/bin/
    - rm vault.zip

    # Download Cosign CLI
    - if ! curl -Lo cosign https://github.com/sigstore/cosign/releases/download/v2.2.4/cosign-linux-amd64; then echo "Failed to download Cosign CLI. See the job log for details." >&2; exit 1; fi
    - if [ ! -f cosign ]; then echo "Cosign CLI file not found after download." >&2; exit 1; fi
    - chmod +x cosign
    - mv cosign /usr/local/bin/
    
    # Extract image name from the full path
    - export IMAGE_ONLY_NAME=$(echo $IMAGE_NAME | awk -F/ '{print $NF}')
    - echo $IMAGE_ONLY_NAME

    - export FINAL_IMAGE=172.20.0.2:5000/${IMAGE_ONLY_NAME}:${IMAGE_TAG}

    # Sign image

    # Authenticate with Vault for private key
    - export VAULT_ADDR=$VAULT_ADDR
    - export VAULT_TOKEN=$VAULT_TOKEN_PRIVATE_KEY
    - export COSIGN_PASSWORD=$COSIGN_PASSWORD

    # Retrieve the private key from Vault
    - if ! vault kv get -format=json private_key/test | jq -r .data.key > cosign.key; then
        echo "Failed to retrieve or No private key found in ${TOKEN_PATH}. Check if private key is present." >&2;
        exit 1;
      fi
    
    # Sign the container image with Cosign using the digest
    - if ! cosign sign --key cosign.key ${FINAL_IMAGE}; then
        echo "Failed to sign the container image." >&2;
        exit 1;
      fi
    # Push the signed image to the local registry
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_TAG == "sign-pipeline"'